The development of an AI agent, much like a traditional development, begins with a requirements elicitation and documentation phase. However, the agent development has many different and additional phases which we briefly will touch upon in this article. A simplified diagrammatic view of agent development might look something as this:




To begin with, we first look at the production dataset available for conversations and service tickets created by our human agents.
 
In most CRM systems, there is a broad classification already available underneath which few set of conversation details are logged by human agents.
For example, there might a conversation with the customer related to a 5G network issue, this may be logged in the CRM system under Network issues category which may have further subcategories. 
 
We looked at this information and determined the categories for which the largest number of tickets were logged in a month. Let us say, Customers call for most of Billing related queries.
Using these statistics available from production, it is determined which Business domain should be prioritized first.
 
An extensive analysis of this CRM data is done to determine the different category of problems a customer seeks help for under the Billing domain. For each category it is determined what set of knowledge will be required to answer or help with those queries or problems. In some cases the knowledge is right away available from the CRM tickets but in other cases, we may have to scrap data off from webpages, pdf documents or other available knowledge APIs.
 
 
As such, the outcome of the Requirements phase is that we usually end up with stories that are created for different Teams:
 
Knowledge Operations Team
AI Agent Engineering Team
Data Science Team
Security and Compliance Team
 
The Knowledge Operations Team is usually tasked with building pipelines to scrap data off sources such as help and support pages etc, and integrating these pipelines with the vector search services to convert this data into embeddings representations stored in vector databases.
 
Agent Engineering Team is tasked with development of AI agents that orchestrate and interact with other agents, models, and services in order to cater to the queries for the domain to which that agent belongs.
 
Agent Data Science Team takes care of determining what is the best model to be used for the specific use cases and language. Our Data Science team also creates initial prompts and runs them through several iterations to get the desired results.
 
Security and Compliance Team helps out with providing guidelines and assessing to ensure we stay compliant to all the GDPR and other security, privacy, and ethical guidelines.


Here is an example story , our teams usually create sub-tasks or sub-stories under each story for different teams.
 
Example story:

As a Billing agent, I need to be capable enough to fetch all relevant knowledge, and tweak the prompt appropriately in order to answer one of the following Billing query that is mentioned in scope.
 
 
Agent in-scope capabilities: The billing agent must be able to answer anything related to the following:
Breakdown of bill - Explain  and elucidate any question related to tax calculation,  extra      data usage charges, recurring bill amounts.
Bill amount surge - In cases  when backend provides supporting data, the agent must be able to answer  why my current bill is higher than last month's bill.
Compare bills - Be able to compare bills for two months and spot the differences leading to a higher      bill amount.
Link to down bills - ability  to fetch and share urls for last three month bills.
Charge codes on bill - be able to explain special charge codes on the bills in details for example 'RCMG-1mon' may suggest an international charge code on the bill for 1      month.
Third party references - be able to refer the customer to third party portals when there is a third      party charge on the bill.
Bill cycles - be able to  guide the customer how bill cycle can be changed if needed.
Payment status - be able to answer which bills have been fully paid and which have an outstanding amount.
 
Agent out of scope capabilities: Following would be consider out of scope for the capabilities of the agent:
Anything that is classified as non-billing question by the intent classifier.
Anything in the Billing intent but which requires access to specific data that is currently not available.
Anything related to helping the customer make an instant payment using the agent.
 
 
KPIs: The agent's success criteria would be coverage of 90% of the in-scope queries with a resolution rate of 80%, 5% fabricating information, and 2% risky information.
 
 
Decision framework:  Production agent conversation data was analyzed. A classification was made on the high level support type tickets, and it was determined that 50% of the support queries are related to Billing.
With this agent going live and meeting the defined KPIs, we expect to deflect approximately 5000 daily calls off the call center.
 
 
Utterances:
Sample utterances as noted from our agent conversation database, is attached for references and for tests and validations.  This data has been refined by our Team of data scientists to make it usable for tests and validations.
 
 
Data:
Account existing in the      billing system with a bill having consecutive surge over last two months -      2342938498
Account with only one paid      bill in the last three months - 342342342
Account with special      international roaming charge and OTT subscription charge - 9273293482
 
 
Samples best response examples as per Utterances dataset:
Use this data as an example for LLMs, prompt refinements and/or multi-shot trainings.
Sample Conversation1:
 
Sample Conversation2:
 
Sample Conversation3:
