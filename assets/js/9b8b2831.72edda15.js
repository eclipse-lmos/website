"use strict";(self.webpackChunklmos_website=self.webpackChunklmos_website||[]).push([[1126],{9261:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(4848),o=t(8453);const i={title:"Agent Beans"},s=void 0,a={id:"arc/spring/agent-beans",title:"Agent Beans",description:"The Arc Agent Framework has first-class support for Spring Boot applications.",source:"@site/docs/arc/05-spring/agent-beans.md",sourceDirName:"arc/05-spring",slug:"/arc/spring/agent-beans",permalink:"/lmos/docs/arc/spring/agent-beans",draft:!1,unlisted:!1,editUrl:"https://github.com/eclipse-lmos/website/edit/source/docs/arc/05-spring/agent-beans.md",tags:[],version:"current",frontMatter:{title:"Agent Beans"},sidebar:"arcSidebar",previous:{title:"Spring Boot Integration",permalink:"/lmos/docs/arc/spring/integration"},next:{title:"Agent GraphQL",permalink:"/lmos/docs/arc/spring/graphql"}},c={},l=[];function p(n){const e={admonition:"admonition",code:"code",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"The Arc Agent Framework has first-class support for Spring Boot applications.\nTherefore, the Arc Agents DSL can also be used to define Spring Boot beans.\nThis may be a better approach than using Kotlin Scripting if there are any security\nconcerns for production applications or if the application is to be complied to a native image using GraalVM."}),"\n",(0,r.jsxs)(e.p,{children:["The Arc Agent DSL can be directly used in Spring Boot ",(0,r.jsx)(e.code,{children:"@Configuration"})," and ",(0,r.jsx)(e.code,{children:"@SpringBootApplication"})," classes."]}),"\n",(0,r.jsxs)(e.admonition,{type:"info",children:[(0,r.jsx)(e.mdxAdmonitionTitle,{}),(0,r.jsx)(e.p,{children:"The name of the bean and the name of the Agent may not be the same."})]}),"\n",(0,r.jsx)(e.p,{children:"For example,"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'\nimport io.github.lmos.arc.spring.Agents\nimport io.github.lmos.arc.spring.Functions\n\n@Configuration\nclass Configuration {\n    \n   @Bean\n   fun myAgent(agent: Agents) = agent {\n     name = "My Agent"\n     prompt { "you are a helpful weather agent." }\n     tools = listOf("get_weather")\n   }\n\n  @Bean\n  fun myFunction(function: Functions) = function(\n    name = "get_weather",\n    description = "Returns real-time weather information for any location",\n  ) {\n    """\n        The weather is good in Berlin. It is 20 degrees celsius.\n    """\n  }\n  \n}\n'})}),"\n",(0,r.jsxs)(e.p,{children:["Once declared as beans, the Agents can either be injected into other components or\nretrieved from the ",(0,r.jsx)(e.code,{children:"AgentProvider"})," (provided the ",(0,r.jsx)(e.code,{children:"arc-spring-boot-starter"})," is used)."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'@Bean\nval agentProvider: AgentProvider\n\nagentProvider.getAgentByName("My Agent")\n'})})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);