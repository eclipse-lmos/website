"use strict";(self.webpackChunklmos_website=self.webpackChunklmos_website||[]).push([[1419],{4948:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var i=t(4848),a=t(8453);const o={slug:"Spring.AI-integration",title:"Spring.ai Integration",date:new Date("2024-07-10T00:00:00.000Z"),tags:["spring","Spring.AI","feature"]},r=void 0,l={permalink:"/lmos/blog/Spring.AI-integration",source:"@site/blog/SpringAiClient.md",title:"Spring.ai Integration",description:"As the world of AI continues to evolve and develop,",date:"2024-07-10T00:00:00.000Z",tags:[{inline:!0,label:"spring",permalink:"/lmos/blog/tags/spring"},{inline:!0,label:"Spring.AI",permalink:"/lmos/blog/tags/spring-ai"},{inline:!0,label:"feature",permalink:"/lmos/blog/tags/feature"}],readingTime:2.335,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"Spring.AI-integration",title:"Spring.ai Integration",date:"2024-07-10T00:00:00.000Z",tags:["spring","Spring.AI","feature"]},unlisted:!1,prevItem:{title:"Agent Development",permalink:"/lmos/blog/AgentDevelopment"},nextItem:{title:"Llama3 is out!",permalink:"/lmos/blog/Llama3"}},s={authorsImageUrls:[]},p=[{value:"What is an the <code>SpringChatClient</code> Adapter in ARC?",id:"what-is-an-the-springchatclient-adapter-in-arc",level:2},{value:"Why use the New Adapter?",id:"why-use-the-new-adapter",level:2},{value:"Step-by-Step Guide to Implementing a New Adapter",id:"step-by-step-guide-to-implementing-a-new-adapter",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"As the world of AI continues to evolve and develop,\nthe need of integration of AI services into your applications\nhas become increasingly valuable."}),"\n",(0,i.jsx)(n.p,{children:"Since ARC's goal is to make the process of integration, management\nand creation of AI in your existing services as seamless as possible\nit only made sense to integrate Spring.AI to work in a plug and play\nfashion."}),"\n",(0,i.jsx)(n.p,{children:"In this blog post, we'll explore how to implement a new adapter for\nSpring.AI to work within ARC.\nTo expand its capabilities and make it easier to incorporate various\nAI services into your projects."}),"\n",(0,i.jsxs)(n.h2,{id:"what-is-an-the-springchatclient-adapter-in-arc",children:["What is an the ",(0,i.jsx)(n.code,{children:"SpringChatClient"})," Adapter in ARC?"]}),"\n",(0,i.jsxs)(n.p,{children:["In ARC, the ",(0,i.jsx)(n.code,{children:"SpringChatClient"})," acts like a bridge between the framework and\nexternal Spring.AI models/ APIs. It enables you to seamlessly integrate any\nSpring.AI ChatModels in your ARC application, allowing for easy access to their\nfunctionality. These Adapters/ ChatClients can be used to connect to various\nAI platforms, such as Google VertexAI, Amazon Comprehend, Grog, Mistral.Ai,\nIBM Watson or many ",(0,i.jsx)(n.a,{href:"https://docs.spring.io/spring-ai/reference/api/chatmodel.html",children:"more"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"why-use-the-new-adapter",children:"Why use the New Adapter?"}),"\n",(0,i.jsx)(n.p,{children:"The Adapter allows for quick ruse of existing AI model API's written by Spring.AI.\nThis will allow any developer familiar with Spring.AI to get a head start to further\nget to know and love the unique features that come with ARC."}),"\n",(0,i.jsxs)(n.p,{children:["However there are some ",(0,i.jsx)(n.em,{children:"limitations"})," to the use of Spring.AI models in ARC.\nSince they are not written with re-loadability and DSL in mind not all\nkey features will work."]}),"\n",(0,i.jsx)(n.h2,{id:"step-by-step-guide-to-implementing-a-new-adapter",children:"Step-by-Step Guide to Implementing a New Adapter"}),"\n",(0,i.jsx)(n.p,{children:"To implement a new adapter for Spring.AI, follow these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Choose an AI Service:"})," Select the AI model you'd like to integrate\nwith your application. In this case we will re-implement the natively\nexisting ",(0,i.jsx)(n.a,{href:"/lmos/blog/Llama3",children:"ollama client"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Get it done:"})," Since we try to eliminate boilerplate this wont take\nlong :)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",metastring:"title='chatCompleterProvider for Ollama'",children:'package io.github.lmos.arc.Spring.AI\n\n// Reusing Spring.AI models and terminologies\nimport org.springframework.ai.ollama.OllamaChatModel\nimport org.springframework.ai.ollama.api.OllamaApi\nimport org.springframework.ai.ollama.api.OllamaOptions\nimport org.springframework.boot.autoconfigure.SpringBootApplication\nimport org.springframework.context.annotation.Bean\n\n@SpringBootApplication\nopen class YourApplication {\n\n    @Bean\n    open fun chatCompleterProvider(ollamaApi: OllamaApi) = SpringChatClient(\n        OllamaChatModel(\n            OllamaApi("http://localhost:8888"),\n            OllamaOptions.create().withModel("llama3:8b")),\n            "llama3:8b",\n    )\n\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(n.p,{children:["Using the new adapter for Spring.AI ",(0,i.jsx)(n.code,{children:"SpringChatClient"})," can greatly reduce\nthe time of implementation for anyone who has used Spring.AI before.\nBy following the before mentioned steps, you can integrate any of the\nSpring.AI models that cater to the specific needs of your applications."]}),"\n",(0,i.jsx)(n.p,{children:"Remember to choose an AI service that aligns with your project's goals and\nrequirements, and don't hesitate to reach out if you have any questions or\nneed further guidance on implementing a ARC agent. Happy coding!"}),"\n",(0,i.jsx)(n.admonition,{title:"full-potential",type:"tip",children:(0,i.jsxs)(n.p,{children:["Be sure to create a custom implementation of the ",(0,i.jsx)(n.code,{children:"ChatCompleter"})," interface or\nany of the many predefined chatCompleters within the ARC repo to unleash the\nfull potential of the nimble ARC framework for agent creation."]})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);