"use strict";(self.webpackChunklmos_website=self.webpackChunklmos_website||[]).push([[461],{8790:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(4848),s=n(8453);const i={title:"LMOS Router"},d="LMOS Router",l={id:"architecture/lmos_router",title:"LMOS Router",description:"The LMOS Router is a vital component of the LMOS architecture. It utilizes agent metadata to identify the most suitable agent for a given task based on their capabilities. The Router supports three methods:",source:"@site/docs/architecture/lmos_router.md",sourceDirName:"architecture",slug:"/architecture/lmos_router",permalink:"/lmos/docs/architecture/lmos_router",draft:!1,unlisted:!1,editUrl:"https://github.com/eclipse-lmos/website/edit/main/docs/architecture/lmos_router.md",tags:[],version:"current",frontMatter:{title:"LMOS Router"},sidebar:"tutorialSidebar",previous:{title:"LMOS Control Plane",permalink:"/lmos/docs/architecture/lmos_control_plane"},next:{title:"LMOS Runtime",permalink:"/lmos/docs/architecture/lmos_runtime"}},a={},c=[{value:"Routing Methods",id:"routing-methods",level:2},{value:"LLM-Based Approach",id:"llm-based-approach",level:3},{value:"Vector-Based Approach",id:"vector-based-approach",level:3},{value:"Hybrid Approach",id:"hybrid-approach",level:3},{value:"Comparison Table",id:"comparison-table",level:3}];function h(e){const t={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"lmos-router",children:"LMOS Router"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:"LMOS Router"})," is a vital component of the LMOS architecture. It utilizes agent metadata to identify the most suitable agent for a given task based on their capabilities. The Router supports three methods:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"LLM-based approach:"})," Uses a language model to understand and match a task with agent capabilities."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Vector-based approach:"})," Uses semantic similarity to find the most suitable agent for a task."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Hybrid approach:"})," Extracts abstract requirements from the query using an LLM and then searches for an agent using semantic similarity."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"routing-methods",children:"Routing Methods"}),"\n",(0,r.jsx)(t.h3,{id:"llm-based-approach",children:"LLM-Based Approach"}),"\n",(0,r.jsx)(t.p,{children:"Uses advanced language models like OpenAI's GPT-3.5 to understand the context and semantics of user queries."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Pros:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Understands complex queries and context."}),"\n",(0,r.jsx)(t.li,{children:"Flexible and adaptable to various scenarios."}),"\n",(0,r.jsx)(t.li,{children:"Utilizes state-of-the-art NLP techniques."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Cons:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Expensive due to commercial language model costs."}),"\n",(0,r.jsx)(t.li,{children:"Higher response times."}),"\n",(0,r.jsx)(t.li,{children:"Dependent on external APIs with potential rate limits."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"vector-based-approach",children:"Vector-Based Approach"}),"\n",(0,r.jsx)(t.p,{children:"Uses vector embeddings to represent queries and agent capabilities, comparing them using cosine similarity."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Pros:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Fast and efficient for large-scale data."}),"\n",(0,r.jsx)(t.li,{children:"Scalable to handle more agents and queries."}),"\n",(0,r.jsx)(t.li,{children:"Independent of external APIs."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Cons:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Limited in understanding complex queries."}),"\n",(0,r.jsx)(t.li,{children:"Requires initial setup and regular updates."}),"\n",(0,r.jsx)(t.li,{children:"Needs maintenance for embedding updates."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"hybrid-approach",children:"Hybrid Approach"}),"\n",(0,r.jsx)(t.p,{children:"Extracts abstract requirements from the query using an LLM and then searches for an agent using semantic similarity."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Pros:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Balances the strengths of both LLM and Vector-based approaches."}),"\n",(0,r.jsx)(t.li,{children:"Better understanding of complex queries than vector-based alone."}),"\n",(0,r.jsx)(t.li,{children:"More efficient than LLM-based alone."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Cons:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Still dependent on external APIs for LLM."}),"\n",(0,r.jsx)(t.li,{children:"Requires integration of both LLM and vector-based systems."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"comparison-table",children:"Comparison Table"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Feature"}),(0,r.jsx)(t.th,{children:"LLM-Based Approach"}),(0,r.jsx)(t.th,{children:"Vector-Based Approach"}),(0,r.jsx)(t.th,{children:"Hybrid Approach"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Contextual Understanding"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"Moderate"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Flexibility"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"Moderate"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Efficiency"}),(0,r.jsx)(t.td,{children:"Moderate"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Scalability"}),(0,r.jsx)(t.td,{children:"Moderate"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Cost"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"Low"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Latency"}),(0,r.jsx)(t.td,{children:"Higher"}),(0,r.jsx)(t.td,{children:"Lower"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Dependency"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"Low"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Setup Complexity"}),(0,r.jsx)(t.td,{children:"Low"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"High"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Maintenance"}),(0,r.jsx)(t.td,{children:"Low"}),(0,r.jsx)(t.td,{children:"High"}),(0,r.jsx)(t.td,{children:"High"})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>l});var r=n(6540);const s={},i=r.createContext(s);function d(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);