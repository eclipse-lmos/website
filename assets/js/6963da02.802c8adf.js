"use strict";(self.webpackChunklmos_website=self.webpackChunklmos_website||[]).push([[6742],{8474:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"lmos_protocol/registry","title":"Registry","description":"Problem statement","source":"@site/docs/lmos_protocol/06-registry.md","sourceDirName":"lmos_protocol","slug":"/lmos_protocol/registry","permalink":"/lmos/docs/lmos_protocol/registry","draft":false,"unlisted":false,"editUrl":"https://github.com/eclipse-lmos/website/edit/source/docs/lmos_protocol/06-registry.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Registry","sidebar_position":6},"sidebar":"protocolSidebar","previous":{"title":"Discovery Mechanisms","permalink":"/lmos/docs/lmos_protocol/discovery"},"next":{"title":"Observability","permalink":"/lmos/docs/lmos_protocol/observability"}}');var i=n(4848),r=n(8453);const o={title:"Registry",sidebar_position:6},a=void 0,l={},c=[{value:"Problem statement",id:"problem-statement",level:2},{value:"Solution",id:"solution",level:2},{value:"Purpose and Functionality",id:"purpose-and-functionality",level:3},{value:"Core Features",id:"core-features",level:3}];function d(e){const s={a:"a",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"problem-statement",children:"Problem statement"}),"\n",(0,i.jsx)(s.p,{children:"A registry is necessary, serving as a repository where agents or tools can register themselves and query information about other registered agents. This would facilitate easy discovery and integration across networks. However, it must not be a centralized registry. Instead, it can utilize decentralized protocols such as peer-to-peer (P2P) networks or distributed hash tables (DHT), ensuring that agents can interact and discover one another without relying on a single central authority."}),"\n",(0,i.jsx)(s.p,{children:"An Agent registry is essential for several reasons:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Discovery and Integration:"})," The registry serves as a repository where agents can register themselves and query information about other registered agents. This facilitates easy discovery and integration of agents across different networks and systems."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Metadata Management:"})," The registry stores and manages agent metadata, including capabilities, API endpoints, and resource requirements. This allows other agents to find and utilize specific functionalities offered by registered agents."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Dynamic Updates:"})," As agents' capabilities or status change, they can update their metadata in the registry. This ensures that the latest information about each agent is always available to the rest of the system."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cross-Network Communication:"})," The registry enables agents to discover and interact with other agents across different networks or domains, facilitating broader collaboration and interoperability."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Version Control:"})," The registry can store version information for each agent, helping to manage updates and ensure compatibility between different agent versions."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Security Management:"})," A centralized registry can implement and enforce security policies, ensuring that only authorized agents can discover certain agents."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsxs)(s.p,{children:["A Thing Directory in  ",(0,i.jsx)(s.a,{href:"https://www.w3.org/WoT/",children:"W3C Web of Things (WoT)"})," serves as a registry for Thing Descriptions (TDs). It plays a crucial role in enabling discovery and management of WoT things across network boundaries."]}),"\n",(0,i.jsx)(s.h3,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Registry:"}),"\nThe Thing Directory acts as a database where Thing Descriptions can be stored, retrieved, and managed."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Discovery Enablement:"}),"\nIt facilitates the discovery of Things by allowing clients to search for and retrieve TDs based on various criteria."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"core-features",children:"Core Features"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"TD Storage:"}),"\nStores Thing Descriptions in a structured format, typically using databases or triple stores for efficient querying."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Search Capabilities:"}),"\nOffers various search mechanisms, including:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Endpoint-based lookup"}),"\n",(0,i.jsx)(s.li,{children:"Resource-based lookup"}),"\n",(0,i.jsx)(s.li,{children:"Semantic queries (often using SPARQL)"}),"\n",(0,i.jsx)(s.li,{children:"JSON-LD frame-based searches"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Validation:"}),"\nCan perform validation of submitted TDs against the W3C WoT Thing Description specification."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);