"use strict";(self.webpackChunklmos_website=self.webpackChunklmos_website||[]).push([[4078],{5409:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(4848),s=t(8453);const a={sidebar_position:1},o="Arc Agents",r={id:"arc/index",title:"Arc Agents",description:"Welcome to Arc Agents, a kotlin based framework for writing AI powered applications.",source:"@site/docs/arc/00-index.md",sourceDirName:"arc",slug:"/arc/index",permalink:"/lmos/docs/arc/index",draft:!1,unlisted:!1,editUrl:"https://github.com/eclipse-lmos/website/edit/main/docs/arc/00-index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"arcSidebar",next:{title:"Agent DSL",permalink:"/lmos/docs/arc/dsl/"}},l={},d=[{value:"What is an Agent?",id:"what-is-an-agent",level:2},{value:"Agents",id:"agents",level:3},{value:"Goal and Instructions",id:"goal-and-instructions",level:3},{value:"Knowledge",id:"knowledge",level:3},{value:"Filters",id:"filters",level:3},{value:"Tools",id:"tools",level:3},{value:"Memory",id:"memory",level:3},{value:"Eventing",id:"eventing",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"arc-agents",children:"Arc Agents"})}),"\n",(0,i.jsx)(n.p,{children:"Welcome to Arc Agents, a kotlin based framework for writing AI powered applications."}),"\n",(0,i.jsx)(n.p,{children:"At its core the Arc Framework defines an Agent DSL. A domain specific language\ndesigned specifically for building LLM powered Agents concisely and efficiently."}),"\n",(0,i.jsx)(n.p,{children:"Although the Agent DSL can be used directly in any kotlin application, the true power of the\nFramework comes to shine when combining the DSL with kotlin scripting.\nUnleashing the rapid development and testing of Agents."}),"\n",(0,i.jsx)(n.p,{children:"But let's start with an abstract definition of what an Agent is."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-an-agent",children:"What is an Agent?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(293).A+"",width:"803",height:"340"})}),"\n",(0,i.jsx)(n.h3,{id:"agents",children:"Agents"}),"\n",(0,i.jsx)(n.p,{children:"An Arc Agent is basically a collection of Large Language Model prompts, filters, events,\nreaders and other services that combined can perform a complex task."}),"\n",(0,i.jsx)(n.h3,{id:"goal-and-instructions",children:"Goal and Instructions"}),"\n",(0,i.jsx)(n.p,{children:"Each Agent should have a single goal or task they are designed to complete from which they should not deviate."}),"\n",(0,i.jsx)(n.p,{children:"For example, a joke agent's goal is to tell jokes. It should not be possible to use the joke agent to do anything\nelse, such as, maths homework."}),"\n",(0,i.jsx)(n.p,{children:"Example of instructions for a weather agent:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"# Goal\n\nYou are a professional weather agent. You provide weather data to your users.\n"})}),"\n",(0,i.jsx)(n.p,{children:"How an Agent arrives at its goal is defined by the instructions given to it."}),"\n",(0,i.jsx)(n.p,{children:"Example of instructions for a weather agent:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"# Instructions\n\n- If the user asks a question that is not related to weather,\n  simply reply I cant help you\n- Be kind and friendly to the user.\n- Inform the user that the weather data is not real-time data.\n- Use the get_weather function to get the weather data.\n"})}),"\n",(0,i.jsx)(n.p,{children:"Both the goal and instructions of an Agent are defined within an Agent's System Prompt."}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"dsl/defining_agents",children:"Defining Agents"})," for more details."]}),"\n",(0,i.jsx)(n.h3,{id:"knowledge",children:"Knowledge"}),"\n",(0,i.jsx)(n.p,{children:"Knowledge or Knowledge Injection refers to supplying Agents with additional information that\nthey require perform their tasks."}),"\n",(0,i.jsx)(n.p,{children:"For example, a Travel Agent may need to know the current Holiday packages that are available."}),"\n",(0,i.jsxs)(n.p,{children:["There are 2 ways to dynamically inject knowledge into an Agent, ",(0,i.jsx)(n.a,{href:"readers",children:"Readers"})," and ",(0,i.jsx)(n.a,{href:"dsl/defining_functions",children:"Functions"}),".\nBoth mechanisms enable Agents to access real-time data."]}),"\n",(0,i.jsx)(n.p,{children:"Static Knowledge can simple be added to the System Prompt of the Agent."}),"\n",(0,i.jsx)(n.h3,{id:"filters",children:"Filters"}),"\n",(0,i.jsx)(n.p,{children:"The purpose of filters is to transform, augment, validate or filter the input and output of Agents."}),"\n",(0,i.jsx)(n.p,{children:"Input filters, for example, can be used to anonymize sensitive data before handing it to the Agent LLM.\nAnd Output filters can be used to detect Hallucinations generated by the Agent LLM."}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"dsl/filters",children:"Filters"})," for more details."]}),"\n",(0,i.jsx)(n.h3,{id:"tools",children:"Tools"}),"\n",(0,i.jsx)(n.p,{children:"Tools enable Agents to access external services and data.\nTools are a powerful way to extend the capabilities of an Agent. Enabling Agents to not only retrieve data,\nbut to also execute real-world actions, such as turning on a light or even booking a flight."}),"\n",(0,i.jsx)(n.p,{children:"For example, a Weather Agent may use a Weather Tool to get the weather data.\nWhereas a Travel Agent may use the Booking Tool to book flights."}),"\n",(0,i.jsxs)(n.p,{children:["Tools are often implemented as Functions. See ",(0,i.jsx)(n.a,{href:"dsl/defining_functions",children:"Functions"})," for more details."]}),"\n",(0,i.jsx)(n.h3,{id:"memory",children:"Memory"}),"\n",(0,i.jsx)(n.p,{children:"Memory is the ability of an Agent to store and retrieve information."}),"\n",(0,i.jsx)(n.p,{children:"There are 2 types of memory:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"LONG_TERM"})," - information stored in long term memory is persistent and can be accessed by the Agent at any time."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SHORT_TERM"})," - information stored in short term memory is only available for the duration of a conversation."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each information stored in memory is associated with an owner, usually the user defined in the conversation."}),"\n",(0,i.jsxs)(n.p,{children:["See the chapter on ",(0,i.jsx)(n.a,{href:"memory",children:"Memory"})," for available implementations."]}),"\n",(0,i.jsx)(n.h3,{id:"eventing",children:"Eventing"}),"\n",(0,i.jsx)(n.p,{children:"Eventing is a great way to decouple communication between different parts of an application.\nAgents can emit multiple events during the precessing of a request."}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.a,{href:"/docs/arc/eventing",children:"Eventing"})," for more details."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},293:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/agents-d55e8f2d7bd7c2db697f42c11c9af4b2.svg"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);