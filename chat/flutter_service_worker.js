"use strict";const MANIFEST="flutter-app-manifest",TEMP="flutter-temp-cache",CACHE_NAME="flutter-app-cache",RESOURCES={"flutter_bootstrap.js":"3bfb2edf56f3dad463ff53c759652cd5","version.json":"345101093b11dd469d12df805f974850","index.html":"1fd454abcd749af3a699c9626a06bc53","/":"1fd454abcd749af3a699c9626a06bc53","main.dart.js":"60a29bca9c2654d303dd9b7a83eb7511","flutter.js":"76f08d47ff9f5715220992f993002504","favicon.png":"cac303fb8820c8845613ead98edf9047","icons/Icon-192.png":"2e6d3f26571285124673949194cf64a8","manifest.json":"c731c53a201f22d450dfa9d8b7e6a90f","main.dart.wasm":"1f84f2a01e58ea94973ec0fe49b53a7c","assets/LICENSES/Apache-2.0.txt":"c846ebb396f8b174b10ded4771514fcc","assets/AssetManifest.json":"651029e2f635e9ceaa1dcd990649608c","assets/NOTICES":"70cba61a1fed4a8829de23a1f7a610ce","assets/FontManifest.json":"eff867049b9f09e22e34c50f5b2763a3","assets/AssetManifest.bin.json":"bd8f46c81e50e80cbab79446ab1e2a53","assets/packages/record_web/assets/js/record.fixwebmduration.js":"1f0108ea80c8951ba702ced40cf8cdce","assets/packages/record_web/assets/js/record.worklet.js":"356bcfeddb8a625e3e2ba43ddf1cc13e","assets/shaders/ink_sparkle.frag":"ecc85a2e95f5e9f53123dcaf8cb9b6ce","assets/AssetManifest.bin":"3052b9a711a689dc23625f1eb3e2bb52","assets/fonts/static/RobotoMono-Regular.ttf":"5b04fdfec4c8c36e8ca574e40b7148bb","assets/fonts/MaterialIcons-Regular.otf":"4399330d166e166aa189d40aedbfe90c","assets/fonts/LICENSE.txt":"3b83ef96387f14655fc854ddc3c6bd57","assets/assets/lmos.svg":"8156038d054b49b64490bdea673a36ab","canvaskit/skwasm_st.js":"d1326ceef381ad382ab492ba5d96f04d","canvaskit/skwasm.js":"f2ad9363618c5f62e813740099a80e63","canvaskit/skwasm.js.symbols":"80806576fa1056b43dd6d0b445b4b6f7","canvaskit/canvaskit.js.symbols":"68eb703b9a609baef8ee0e413b442f33","canvaskit/skwasm.wasm":"f0dfd99007f989368db17c9abeed5a49","canvaskit/chromium/canvaskit.js.symbols":"5a23598a2a8efd18ec3b60de5d28af8f","canvaskit/chromium/canvaskit.js":"ba4a8ae1a65ff3ad81c6818fd47e348b","canvaskit/chromium/canvaskit.wasm":"64a386c87532ae52ae041d18a32a3635","canvaskit/skwasm_st.js.symbols":"c7e7aac7cd8b612defd62b43e3050bdd","canvaskit/canvaskit.js":"6cfe36b4647fbfa15683e09e7dd366bc","canvaskit/canvaskit.wasm":"efeeba7dcc952dae57870d4df3111fad","canvaskit/skwasm_st.wasm":"56c3973560dfcbf28ce47cebe40f3206"},CORE=["main.dart.js","main.dart.wasm","index.html","flutter_bootstrap.js","assets/AssetManifest.bin.json","assets/FontManifest.json"];async function downloadOffline(){var a=[],e=await caches.open(CACHE_NAME),s={};for(var t of await e.keys()){var c=t.url.substring(origin.length+1);""==c&&(c="/"),s[c]=!0}for(var n of Object.keys(RESOURCES))s[n]||a.push(n);return e.addAll(a)}function onlineFirst(a){return a.respondWith(fetch(a.request).then((e=>caches.open(CACHE_NAME).then((s=>(s.put(a.request,e.clone()),e))))).catch((e=>caches.open(CACHE_NAME).then((s=>s.match(a.request).then((a=>{if(null!=a)return a;throw e})))))))}self.addEventListener("install",(a=>(self.skipWaiting(),a.waitUntil(caches.open(TEMP).then((a=>a.addAll(CORE.map((a=>new Request(a,{cache:"reload"})))))))))),self.addEventListener("activate",(function(a){return a.waitUntil(async function(){try{var a=await caches.open(CACHE_NAME),e=await caches.open(TEMP),s=await caches.open(MANIFEST),t=await s.match("manifest");if(!t){for(var c of(await caches.delete(CACHE_NAME),a=await caches.open(CACHE_NAME),await e.keys())){var n=await e.match(c);await a.put(c,n)}return await caches.delete(TEMP),await s.put("manifest",new Response(JSON.stringify(RESOURCES))),void self.clients.claim()}var f=await t.json(),i=self.location.origin;for(var c of await a.keys()){var d=c.url.substring(i.length+1);""==d&&(d="/"),RESOURCES[d]&&RESOURCES[d]==f[d]||await a.delete(c)}for(var c of await e.keys()){n=await e.match(c);await a.put(c,n)}return await caches.delete(TEMP),await s.put("manifest",new Response(JSON.stringify(RESOURCES))),void self.clients.claim()}catch(r){console.error("Failed to upgrade service worker: "+r),await caches.delete(CACHE_NAME),await caches.delete(TEMP),await caches.delete(MANIFEST)}}())})),self.addEventListener("fetch",(a=>{if("GET"===a.request.method){var e=self.location.origin,s=a.request.url.substring(e.length+1);if(-1!=s.indexOf("?v=")&&(s=s.split("?v=")[0]),(a.request.url==e||a.request.url.startsWith(e+"/#")||""==s)&&(s="/"),RESOURCES[s])return"/"==s?onlineFirst(a):void a.respondWith(caches.open(CACHE_NAME).then((e=>e.match(a.request).then((s=>s||fetch(a.request).then((s=>(s&&Boolean(s.ok)&&e.put(a.request,s.clone()),s))))))))}})),self.addEventListener("message",(a=>{"skipWaiting"!==a.data?"downloadOffline"!==a.data||downloadOffline():self.skipWaiting()}));